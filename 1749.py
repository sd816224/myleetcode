class Solution(object):
    def maxAbsoluteSum(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
#         # def abs_sum(list):
#         #     return
#         ans=0
#         for index1, i in enumerate(nums):
#             # print(nums[index1:],'++')
#             for j in range(1, len(nums[index1:]) + 1):
#                 # print(nums[index1:][:j])
#                 list=nums[index1:][:j]
#                 ans=max(ans,abs(sum(list)))
#
#         return ans

        max_list=[nums[0]]
        min_list=[nums[0]]
        for i in nums[1:]:
            max_list.append(max(i,i+max_list[-1]))
            min_list.append(min(i,i+min_list[-1]))

        return max(max(max_list),-min(min_list))

#%%
# nums =[8359,3756,-714,2844,-293,7506,-4129,7666,-9095,-8441,8738,-5391,-3271,-7462,-2931,281,6633,-2800,-742,7637,1295,-1500,4260,2523,-4896,8361,1642,9474,-2243,-2391,3581,5020,-5757,8886,1393,-7245,8690,6368,9622,-4007,673,4135,-6339,-5651,1954,871,4277,2518,-8334,-7700,6717,4269,6778,-5366,7630,4425,8926,871,-4105,9168,7509,3804,2018,-437,-6569,1265,2782,-2192,-664,-2293,-6843,-9223,-1467,4186,933,7705,-8393,-9808,-1273,2805,1426,2273,9283,-8919,-1404,3589,9751,-1377,-7040,-3872,3521,2228,2591,8338,9898,-702,6008,-1017,-3742,-2812,7439,-4689,7605,2249,-1376,727,2616,-997,5866,-2771,-3630,-1913,-1111,-9465,1817,-3089,-5907,-5815,5937,6799,9294,-6024,-8882,-8097,7036,-7669,8775,-7182,6425,-6789,4616,-9393,8037,2178,354,-6059,6458,2858,-9129,-6369,-1643,6152,675,3571,-884,-196,5094,-9158,-633,3946,4788,5122,-516,8792,1404,-9453,1441,8019,3694,5779,-1067,-9271,-5865,-1348,4805,-711,-8587,1596,2521,-2473,-8080,-9707,5562,1384,6709,996,-5038,-767,6292,-7693,-4680,6221,2781,1016,-7219,8083,-1817,1592,-8827,7458,6182,6610,-8089,-4131,8122,9259,-4642,-330,2660,-727,3501,-210,-4270,-1498,-8702,6334,-7345,-3946,672,2572,4365,-5373,-4738,-9898,71,7111,-2560,-1182,-6249,3979,-627,8848,6343,8199,-9163,-5429,-3245,1032,424,6686,-4790,-7009,-7523,-9949,5157,2024,-5496,8194,5236,-5971,5797,8671,8003,-1405,-4720,5498,1962,-7651,-8141,-1015,-1542,-8795,-9905,9809,6009,-4500,6064,-4514,549,-8847,2326,5665,-6352,-437,-4263,-5881,5959,-5592,2772,-2741,2199,-1447,-3156,1262,-2212,8732,-7181,9481,1423,684,-1935,-4670,8563,-4818,7684,336,1421,7683,-6807,-4406,2306,-4989,4410,4525,9044,-6590,-4886,519,3999,2171,-7545,5846,5875,7545,6153,3768,1537,-1107,6873,-1326,1977,-9756,2454,-1895,-6426,2345,-1478,6372,-6593,-3275,-590,-3667,-6769,-500,-3591,-8955,3303,8714,-8427,2595,-264,-6995,-241,1552,5273,6264,5544,8269,256,5771,-6538,-9640,7329,3979,3862,-1896,-5823,-8925,8803,-552,6555,-9341,-7813,9692,-7233,1905,-1201,-3253,2404,-2037,-3601,4675,750,7740,-2366,-1300,1123,4853,-19,-5623,-4387,-352,-9664,1420,2315,-6700,2489,3533,3334,-4495,6443,6556,-4173,7046,6922,3001,2326,5402,-342,1989,8482,3056,-2206,4335,-982,-6988,-7129,478,-998,1807,7075,3129,6150,1606,1245,3359,8467,-2064,4103,1344,-8960,2669,8063,6108,185,-8285,-3371,6737,8332,8476,-7549,3471,-5438,7806,-1774,5648,9914,8288,6410,-9992,5172,3870,-5710,4338,1944,-5562,-5408,8925,1010,5457,9884,-8957,5505,-2762,-229,-3284,1681,8412,1075,4342,-457,-2015,-6638,5441,-6491,5013,-7695,-9615,870,-7253,7364,1540,6541,2561,592,-323,7571,3172,6108,6373,9934,-161,-924,5352,-203,1897,8185,8982,5076,6035,-3933,-9961,-8041,5307,-3806,-1270,-5066,-626,1001,-2935,-827,1756,5947,2928,1428,-3517,6484,9797,-9113,-3974,3511,5535,-9362,7293,-5051,211,4990,-5345,639,289,401,4374,-641,-4924,-631,9711,-9589,1150,-6323,4124,-9556,-1190,6118,-8469,-415,2341,7811,-2234,-1859,-5747,7577,2649,4905,-373,7870,7242,-8298,7295,-242,-3047,46,-7190,1868,-4766,8874,7637,-9580,-2131,6638,2458,5891,4349,9366,-3542,5724,-3847,-2345,1461,-2828,-85,-8782,-7208,-6291,7363,-1253,-1708,-2517,2182,820,751,530,-1153,4194,-9144,501,-2257,-7634,-9451,2378,-6577,6174,-6519,7594,8299,5332,-1372,1288,-3446,-3527,8299,-3343,-2611,-4380,5782,8059,8653,4909,3697,-6780,-9956,-3043,7268,3859,-10,112,3657,-6364,5298,3810,-9753,4878,-406,-4989,-6892,775,-2129,9350,2914,9837,7292,7532,2081,8226,8116,-1460,-7567,-3202,8316,-8182,-2418,-1435,4277,-4674,5692,-1608,1302,7503,9545,-1122,-7912,8286,-1146,-1503,6850,-1465,-6313,-9312,-2400,-8387,4780,-4797,5390,-4095,-7503,-9982,3323,4792,-3454,9900,6533,7655,8974,-677,-6347,-3517,-861,-5363,5335,7575,4452,8968,5594,-4538,-358,7506,4380,-8988,-5758,2290,3346,6269,345,-3562,-9594,-7202,-8592,-9251,8296,5180,-1609,-1467,-4626,767,-4040,-8711,-8356,1062,4132,654,-9841,-9903,-1944,-7463,-6889,-1868,3435,-7113,4906,-8390,4262,-9427,-3552,9988,-9910,-1524,1059,5376,-9568,5519,-3729,-7931,2721,9045,7619,1498,-6919,3658,-3495,-4694,1959,1466,-1260,-5254,9431,-4026,9450,4044,93,3874,-7238,3009,-1835,357,-9839,4027,-1538,8594,37,8104,2843,-2054,-257,3107,4195,-7188,-5548,-917,-9910,1979,5209,6026,-5901,3778,-3052,-8818,5750,-8304,5880,-898,7417,788,1482,-1199,384,2365,2188,4340,2619,-3412,-8654,-365,-1107,-3847,279,5973,2132,8092,-9647,-4383,-4858,7037,-6052,-727,9023,3855,-9332,-2607,-9175,-8105,5015,-9280,-4345,5910,4536,9599,-2028,-10,7164,-477,386,-7614,-3950,-9152,1054,-569,8145,248,787,-7226,-9767,-2037,7518,-9458,-5187,785,1244,-2048,5939,-35,1208,4300,7485,-9267,-919,-1824,-841,-1829,4184,-5637,-6105,4354,2700,-9142,6719,1301,2416,6559,2081,-6282,5674,294,-6162,-5422,-8691,4667,-2393,8776,-3854,7710,-5198,-4270,-8739,7570,4751,-6854,8738,-8055,-5574,-8438,-499,4181,-270,9542,-4214,-8876,4837,8639,2129,-7628,1438,5610,4230,-7379,3975,-4629,3074,-9623,9265,-8491,-4386,2722,-1840,2464,7168,1838,-668,5471,6919,8222,6436,1478,-2755,8080,2274,3970,5482,-3456,-6192,-3814,6915,-9527,7167,-6337,5237,-596,2943,-8069,-4014,-9182,-3113,1249,8358,2962,129,915,-9085,5975,-8807,-4452,6237,5401,-634,181,8125,2045,9593,4755,-4344,3750,839,-3105,5559,5309,7411,4433,-918,1459,4246,4174,-7729,9789,-2629,-7129,-5479,7642,1747,3534,-7214,9274,8789,6787,-7022,3046,9463,-371,2641,5276,-353,2377,215,-877,-6614,-8365,4184,2427,3658,-9766,-7037,7125,2792,-4193,-6196,-4431,-9574,-3593,-1936,-944,-4003,-7093,-252,5742,-5467,-1105,-2290,-1622,5227,307,-3830,8769,-1997]
nums=[2,-5,1,-4,3,-2]
x=Solution
Solution.maxAbsoluteSum(x,nums)

#%%
nums = []
for index1,i in enumerate(nums):
    # print(nums[index1:],'++')
    for j in range(1,len(nums[index1:])+1):
        print(nums[index1:][:j])
#%%
5%2
