from collections import Counter
class Solution(object):
    def canConstruct(self, ransomNote, magazine):
        """
        :type ransomNote: str
        :type magazine: str
        :rtype: bool
        """

        # def Counter(s):
        #     counter_dict = {}
        #     for letter in s:
        #         counter_dict[letter] = s.count(letter)
        #         s.replace(letter, '')
        #     return counter_dict

        rn=Counter(ransomNote)
        mz=Counter(magazine)
        # for letter in rn.keys():
        #     if letter in mz.keys() and rn[letter]<=mz[letter]:
        #       continue
        #     else:
        #       return False
        if rn==rn&mz:
            return True
        else:
            return False

#%%
x=Solution


ransomNote ="dcidcjgibfadhjibjjihiffibcccajaieegficfehcajcfcahjjdaiggdeabffbcbbiafiejgcifbjgffgjgebhaadeifdbdggefjejeabiefgjajihfdbdeifhcijbiidhgeahchgadjaeijfiiicfgbiecajjjbeibicdhfjfiahchdfagafhgdaafccaegebfjdceccachiiiihiceeiicjbfecbfbhgjjbfaijhdgbfeccdiihdijbefhjjjbbccgghffbggaaijfhaifbhebaighdheefbijjhbadacjidehgahjgajcagebfiecjcaejjfdbijefficghgeicafadidifdgeidgaihgjcibcbhijieaihaideafaacfcgdiajffihajbaifhdifejbbhaddbajjfjfdddfaadcdebaijdejehgaefcfijabcahgbdcddeibaihbbccchdbjbajhffbbfabjdaaggigahicijhhahaeccbgbgdbfhdcfebifhifeahhbbhcfjjbbhdaagcbhcgaaijdeagecjgjcgbiihdjdiahebgahajjdfccgahjacjhjjihdjbaag"
magazine ='ahjhbabgjhibfhfgdhdijbiaijcaccecjgbbchdeijejcadhdjadhijheidifabagjijbcbgicddfdegijgbaedcegcghhdejgihbcefggihdicghaefdiiicbegedaghahcbdcjehhdbfbahbcdifbcdiacbjahjebdccfajdbdbcjbhgbhgbhgagedchgchjjgfajdbdcggbheaghejfcgfcjffgfifbdbfhgefjjbecbdejeajeeagebahhheiiffdcgiffgdiafccibgfiejagibdibhhehidaddjcbieidfgcjheajdbbeebahecjfgcbcdjjccbhbjchhegdhiiafbggdifdhbechfjadeejbfiaifdhjjjijhaihefebcbihhadfacaffgfahgafecceagdeaiegjijccehbgifbjffbjfhhiacjjieeafjgcghdeiejbghdjehihjdbcaeggfbcbbicbhfbfgagfjgcgaadbgjjfefjdahfdjciijeaidjadbbacbgagcebbgeahjgjgiedgbdhhhgbhbjgjajficehafjjedhffaidadgieeebdbehagbcjdhecfbicejcceajjajdeahecgjaiaifabcigffdgfgfjgdbbgcjdiiheddihfgafecjbejbfifdbjcaaffafeecbaadhecaahddgjjffifihfiahbeabbdcicbigidhecegdjcjiigbbbdcichdbgcebhhjghebcaiibiiiidggfcbgdbchidjageibbahgegfhcfdcfcijfcagjjfhcedeafecjgcgafggeihhighegceiiecedddiifchaaihciagcgfdggcbcebifjjaeadcidfdcdihcghdijjdjacajdaheaagfccbieiebejgccfcaaabhhdbcfeajjiajggcedifeejegefbeifaiejibjihhhccagcjecfcecbefdcabedihebihgabgdigihjdeidcbgiiecfhedecjgadcjdggbfeijbaajhhjbaeeehihjecabecijiaigedeabcdaighbegbacecbjaigieihbhdafbiicjghgcbieijjgbfdjijbdbeccdfhhddbchefghdhgedccgjficahbfhegcgcadjciidhfbghjagcbijcjfiebjfegdgefcejddifdhciffffhhjhdhceaigjaedgdchjjedadfhdgbbaffdejefccajehecbihajjigejgcgaghficbjdjebieiecacbficdhaigechgigeeiiejceabiadcdafgdgjjeibehebbbdjaggaicdgedidbfehjajdjhcjhaceigdhihefhaahjgecfdgiadcfdcdacegegjgaijbichcjgjagbbihegjbiichegbgeeacjajbddhgcfgabgfhcagedafdgibifehbbjbfjbfcbehjfhdebghiicheiibdfeieffbjbbbghbddaaccecahcigihejbdehbjddijcdhhbdgdahjbdfidjabhegefjaiicgahbjjcjgiediijhadjcbgagchhabijgadgcdeibibbfjbefjigejihejaejgefdcbaafidhdhfiaibihcaaijfgdfjfhcfggjccbagebcejecihgheichfigifbaihcfgjafajdghhijgeaejcabgcgjahdidgdddefaijjfjjhfcchbbhdacgcigdchfdeaaiegjhaefhfdeiefbacbihcecfibahgaiafdiibbhchdebjicdjebefbiaiigifhjfcffdjiedfdgficeghdhjeabijiegaibjicicifgjgdchggffbaghafjebfffgjfjaeigeebdbdcbaacabdbhdgcjhhdhjehiddbdafejgcgchfdiicacbijfdaiddghhddbabibaihcbdjbefcbbhdegicgjhhffijehcfgcicabdfagcfdegahjfieaccgdafffbebjicdbbecdhdcgidjchieifidijajfaifachiffaidfchichbccccfhjichheghhdcfhbijgegbegddgcgacfacefgccghihfhcgaiageecjbjhaefgcegifacgdbgdcfecagciajfbfjafhjgbgjdgfcijbgegefbibhabhhcaaaiifdcicafjgafjbjefeaggcjdebadhiefadgehjedjbiacdgfejcgahhiiadffccecgfbbfhjbbcbcgiccjhefjdgdgedbeggbecbjcfeebgcaiaighhjcjfcgjgdddejdefdjechacdcfdcgbhicjbageefdcihcdgcbfffhigfbefedjjdhddihbcjddgifdgedcbjbgeegdigeajbehjigfddjgibcbiechigebcjfeaedhjdgdjiejcdaeaebfcifdiafeegggaidjfjbeaceibijgbdfcjcaejjgfaccagcfjibcgihhjggggaaaajedgiiefieacbeaagiaedfebfdiiffhfdffhdagjidefggjggiaddgggiihbdgacibccgcbbcdcahgjdjfdbabccgjheefiaiajfhbeeggdhcadibijbebighgfecggbdhjeaiajeabffgecefhidbdjigieibhijcjjbceadebjijcjcedibjcidjacabeaacafgcggdfijcggdfcajibcfbheeddchfihigbdhaifajiihcaajihgcgfadfjacjfhehfdaajdhabijheajibffcjeehjahghcbdihgfjdafbhfbefjgigeaefbjebhhgdagafjhcijjbabccibiihjbgchfibheafaaceigeebchhafheigjbbbdehhhahddhjbfdjjacbcjhdahdecdfhfiajfjdacbiebdabeahcegiieeegjfiidbgeebhjhihiagiddigeijjcbjcbcabibhgjdaicjbfbaadhieggbiigcecfjdhfdgbagegjifbgecicddcdidigdidhfbdijcjhadiehaafcdhfeefbjeijjfeichecdihdddcebighgjjibfjjbdabafibccdcdigfjbffgcedgajggghjjbhdcdeeffgffehagacbaejdigegidhiebbchbddjbcdgbjjaighjgggcdhabjdjhffchabfgceaifggehefhdgjcgcjejaiidjagejbjgbddidjgbdefhfebaihahjfeacfajacaccddfghdhijgcadbjahfbfhdidjigdgeagaeehdibbciddfebhijdhdhjjeedjhecadaifdjfhgeebcajhebahggahbcafbadcfdfdecciigiichfadaijjebcjaeaicjfcchgjfcefafddjhgecdbahabdgdcafjfedhdiegebcdbeeafbaeahbageahedefiafhechadaafjfaiaacfdhgfagcfejdfbjiejiacjjebajcjjfcfddaagficeefabcbajiajcbhccfaiddaahgibdcbijjiaggihgjbbjhjaajfagdaabeieeiffabaggheidffbgffhciifafacbhaiehjdhhhacfdjbdafejcgfdbjifgggfediaeiejhcahaidaahcjgjdegidbfjceeagcjigbihjghgighajjjijccbfejbcchhjdhbfccbcebdaahaihijiaiaaeecbiaibeaggbdeiaifacjbiegbceedhhabchbciihchaccgjifcjfiejjjifjjeejiigdbjdbgeghefjhbiiaggfabaebeagfeibifdgeajgdheddgjhdgbchhjdadifcjfgibgdfjidbbjabaedihcbifjecedbhfhghbchgjgjbgdacdabbccedgjebbedffbgjjihheacdiaiiaihfeeccjeihbidchijccifibdbeijhajgghahadadfigifbfbgeefccehbghibedejjjceebhhhhgbabfdiihghbjdehbaegdicbgbgccccghijijaiacgeigjacgbaafigiadfibcabifajcigifffahadcghiidfhgchcjddgjacdgacahhijgjefajfccaghgfeehjhaaifffegadgjecigeccdbahggegcjbbieefegicdaeiecadjaiebjbfheegafchifggehijgefceeachibjhbdcefbebfgfbiefbfcjhjdcghhifccdciihfhijhibdddidbcegiaibhbhbddhcccbgjbdejigecjhcbiaaihigbjcaidggdhabhbchiebicihbefccddbebffifdfcfeibgfgbgigeecbccjbgjidegdbdcheffeffehhdhcjidhjcfjjgeefcebiagbjcffbgbbjagebebhdacgegbjgjjfgjicehfahhchjbcibjjceaeibhgagdahgdefffhjjaeffjaebigaijiaabidfdchacdeghgacfgcddgidhieebdggagbcfgjgfeadejbgbieccdhhgacgbjahehcjiahahhfjjfcjcjhadcheeabgbiababbgdiijjcfdcejgbeifidjiffgbebbhecccfeiigiejaicjhfjggjejigdbjdbdfeddbehhfeadbchghegcaecaedceadbibhbhjifefhhehhdeiafdffbfafejjjfcdbbhcgifgcjafhafcahhghehjjiibdedifbgbgfjhjefadafcggicaihahijadeafgahfcdfbafihifhafbbiidcibbbfhdhbjajddabfeghhidbcaccegigbcdjhhhjfabdagdjeieciaegfiihhdfjihijffgegcggfiefdccaebegafgjaaadibchibdggbgddhfbdbfbejijebiagcfgihjdddiiagajbjgigagcibaiigadgdgiddjjjejgjcbcbjhdfbbhdehfiibjbhddcbaghbjiihdageiahhfcaebbifjbcfiigibjfbigaeifhjejbdjaefbadcdbichgcfaigcdfebhijdhdafjhagbebajbhfhjjgcheehgbdcghaecffabeiegdcahggijbaebjaaffdjfcegifgefjieaaciebbcfjgaedbfcffeddcfehhdijcaifidbiejfcicigiadfedehfjccffhfeafjhehiffjjbjahjcbejafcfghgedhbifjigbcaigaheibdghbcgjijccbahdheafifidhcfiafhbcdjijhejfgdcgjdgedagbeheejichifhbdcejddahjacjiefhaaaedbbhhdecchgaahchjaaddfbcabibighajcafjhabibadfejgjadjhibbeadcfeahfihedhaffhfedbbihbbfjajbfcaaiaejedciiaaeaghdfgjdiiaaiefgfibdbcffbhhhjgiaideiggfceeigccicfecchccjiafgbfecgbgjdabbgjdbcjiebedejddadihedacchaccafhfddefeaababffiggibidhfegcjagaabhejadfdfgfcjejffbhibifcjbjjbjeiebgjebiehfidccebjeebgcggejabbajdjbijjhcfadehihdgjfdbddhgcgfeadhihjacffbdbajdcfgdhbijifjibiiegafebdjiebbebeddfgfeciiggadfchbchahidafggibjgdebfcddihfeegeicdibhcfifgahfdhijdbbefchedhihihfdiahecidfdjgjchajijacidjhgfghcjdifcfefihhdgeggagajbhfjdadcjggbbeaaajdhdhhiacfbbjeifbdedhdiidagehjjgicehjhcdbjheccbjbijhiabeadhcehagaeahdfddbbidebgghcihgabjgbcdijffcdbcdbifhjajggjdbbdbiajeiggaaiegdidgcghhcdjcicacghgcdehbcggfbjbjcaihajafhgeefhddacafchbbehaccbaiadffdfbjbffjgdiacagdgefibebcbchjjeidgeechibeghcbjaagifjehcbbhibhibifbgbhagjeacjjcfbfffjefaeigcacdjgfbagicejidajfegbaiihigccbffgaejcchdbhegfhigifdjcffdfcbahaafbiafajhcdiijfcjbajaebjbbijdhdefdjfachccdggdifaffdjbgcghhidicedacghbjgbigbgjdcgebhahgciafhcjgbhecieeebhebjcdbejccdgcfjidjfhifefdfefjfhciaiiedihceibdbiadbaegfabjcgagbgebdgcgfgihicgdahehbiahagddhghhfefcicjejjjjegaagehddhbgiicbcdghgdgadhfeabdebafijjdegibibibgbigghjacihejjjhjcihabcbhdjjfdgcjbciggchhibfbjhjifedigbfddfjiiefjcifbdideebgdiejahhhhcibjaicjihgjjceefaehbbccbcbbijfebcaadhehejhhfiajhajbdbbchabbhhhacfedcgbedagcjhedhbajajdigcfbfiegefbfjacdagfijdfacahabddafghigehfgighabhhhjaffdijbehhhbddgcgedacgiihfeicjibbghgfbgafbjeafgcfjjfhcgjigbbigaeigbhidgadjjccjccgiecahfjahfhfaagagdbaigchajabacidbbcaagcgdfabidbgfdgghcgabbfgbchdfbdeidbajiehajaihfjjbdbccfahdhhibcaeijecgabbhbjgidefaaffcjgdjgccedfgbffhjcbgdecbdiiedbihadjiieagfhgcedebahbefgbfgbjeaigbffgiachagifaiedegbgdejcgafijhidigheaegfaeiebhfaejcggggjcggehbabcjabcfaihjcjgaidahdghigaaggfihbfbjjcachebijgfhefejhedgdgfigafbjhdaffaiaebdedaiacgadechhfhddjhdaahhgabahcbdfbcaadegiecdeaejdiiiejiegfabfdhjeidcbgebaeajahgbjiiajejaecfcdceajjdibgbcheigajiiejagfbdijaijchcdejjgbbcbghaddfdcgdihiafhbjdjgccabcjhgaejcfhhhbhbeeacajcijafcfagaegijchdhcbjcaachjahadbdhigfiaiigjiajehjgcighiagcfefgghhdbdbgacjhebhcgcfdcafachdhfacjehaaijjdidfaefejbffbejaaagidebjbccgijibdebeeihhjecddecijcdicihgjeeaedggfaifejjgjjdaiaifgfejhdfaejjchbiihbgijfjaifieadhhaabheaffjddeiibfacbbaidfdfheeiajjjebbajhhichachcaaddffdbcdjceajjcaefciabfahhbcdheihedfbjiibeehiehcjjgjcdggicdfhhhadhjjacdjhdcddebbaijfajhcghebjadaeiadaidiajcdcbifheeagihgidbghciddddcefbdeedgfijijchbfbcbiiahigdaehjffjgbfhfbadjhgebfbehecadbieabdgdidgifdjfdbcfjagdeehhdabicabadgjgeifiieeaebgegfjabaeffchefedebhccdgbejceeigfaagdbjdhgjbjjjhihjddaffiegibhgahedjidachcfgiadbbchhhificddghibfdaabbddfdehhefbeiccfgibfaihbfebjbbhfhfabhaghhhjejigcgdhigcdcihjeghejfgecdbhggfajhjjceedgecfhehecghgjjgcfhfjcjgbedhdjcfidhgggbfgabaihffaacjjhajbhhjjhibhjeabbhdjageijjgfhdcbdgjefbaffbeccifegfeidbibgbgicafbfhbdgjjejdjgfgjegcdgjhefdidhiffcjgfafjbfijigibbhhabehijfegfcbegbahiccibdihcajiaejhfhjgjiifdbagjebcjiihcaibafdcdahjdjagfeddbcehiaaefadahcggehiahfhjgigaacjhgebdagjjjbejjhgcjfccgcbjebccdbijhihfbicjajdaibhbdafcfcbbhhidjjghbfegfjdbjfbgbieebadcgfgeaehdgdfajaaiaabhdccadffgdahhehaffhfcjiehihahfbddjebafbfhabajjihcchahagjcbcfeghjefcfaafgdhbgecfedjceecgbdahbjhfaiehbeedgefiideebgdffgdibbgffibdagbbaaiahghhidcjidihcdihdibdhbgfdcbfcbiefacbiiddhgdechaejibcdbjihefgcgheeddbaehdebefhhdfihhajffhehhgcbbhajgeaejhacadcjgffcaffidhbdeciehhbecgeicbchgajidfccicafeicbgcaaidjaefiajgcideeibdgdbgedeaejejgjdhfebghgjhhaeifjejfhadidebihicgfbibbggfdhfhahjaefifijgdchdaajdcbadfbgfaiadcebabjfdijfahhacaiijiffghgagejfbgaebbgjhidbaeijecdgeccdcjegededdbddbiacdfggegjidaaabhgjibcbjfbeijbgjfdafhejibdjjfdcjfdiebjfcifbfjcgfddebjjhdigedgaficcjfeacedjdfjbggcdiijihaageafajfejbdceffcbhgaaeiejddifdadcbddhibbijdbahcgjeeffjbiebehicdefciaifajcecjhcjfdbfgddahibaicfabffcgbfbeeaieccdcfbhbifbhdcchhhfedadbicdfeagigabhaeaefjidccaicjhfcajjacgacfhjhebifdefgibddihbdcdidegddcjbcadfjhaagebfhffhbegfcffgaghjehaagachgdcbfbhedbhhajdiahefigaedbibhacdbeaafjhgcjibidaebjaefjfjghaagfdcfhdcihgdigghcdcjihcehjdaceidjgbdcdhdejhhidfheiadhejbddbfjhhaigeiiajdibeafagdibhiajjbjcdejdfehfihjgccaahgcigafdcacdbidhgdjebdjcjheggedgbbiadahchbffiicdjhbeaabadejiabdejbafadahcbjaedijahbgeehcedcbbjcchajacffggffhabfafdeagjbhiecgdjfgadeafieecfcadficdehhddjdgieihdeehgegaaebgifehjbadeegfhjfjjagefhajdbichdgdfjeahhfghdgdacdahigcffhighjfcbgidjjddeahbceaijghahjhjgaedagifbfdbigddegicfhieeccehdcjggefbachhedhhcjjggfbaafehggighgdijdjfgfcebbahaffehhgfjegbfgaihchicgjafhbgjficffigihcjhciicidiceehchgaihedidigibefifcjhaacejcddicggfgbeaiifcadfieedgaccfiejihjjgeijefbehfjhfdefebdadgabfccefgahiffbjjdeceebbjfjfbgaegbdebfehjifabijdcebbdaabdaecgfaaaebhhbgdecceiedeagcgfbcbjddbhedediaddaajaijghbcjabcdidadcajfbgaeggaagdeedidegjagcigcghcecibhggchdeghbagjedhdifeidhfhfdfjaifbhgbhdgadhbagjgcehjjcageabajaejciccejcccecfdfhfdiadhafcfffebachjfficiiebhbdjdeajbjcdjeffiabcecajbajiihdebbbdhffjbibhcaegdceacgbdafabiicjachbegifhbhajibgichcfjcccijijhajijdfacjcgceehcaceijciihdcbaahhgagidfcjihdgagfjidaaefjhfcdbjfeiefbhgjfghhgfhhfhbdeagjgheiecdcejiicajadhehaejahecgbcgdcebhfjadfiaaahehbcdaieheeebbeciceaiiajgjhbdejdfjdfcdibdefjcedbihbdbdjgacgighjceaaghbdbjdhbecjjffebbjgehjcfhahbifhjhgbjbhdajcifjcfjihjajjhbgdabijiefhceihjadjdeabcbcdjhaicccjiacdjeecdiiejeeajehagecchhddchjggiccfbifacbjiijccjciafaeabgicafcbdigjdjhdcedhfjedecjgigiejhiecegjfcegeabeaadeegehgdihjjcgfghijbhhdbehgfhgefggdadihbaaaghcdegdhfdeccbgfaeacdcggbjfibjjdfijbdgefcaegjfdjiciebgigceibdefiaaghjaghifbcehdgeijadbbfcdiacfbbdifjgfiadaeeaibfeaegjceeffcdifffgifcgbaceceghjdiefjebebhfeaefeicbjieafaibjggbjiiigjbgggjaghdchaggjdehfbggbhhbebacjiffdcededcbdcbadfdefiagbfbhjfadfdgcceegcfdgjfhahadbajaeechgfggagdafeddjbihiijijgjaaffgggdhadchhhgfehbifbjejhjabdbhgcijehjefheccgfegidhfgagdabidaedddjdfciecddfccjiieiffejdfgicbifedbbddbfdbbidjgajcccghjcfdjhjhhffjdafehfbebfihdeegfedcehggjieaaiejbjiifagagigfcidaggigcaeahghedihecjaeijjcecjfebicabhddgibaeejdggeehdfjjeicchdcijfjgjhgcaeigchjfbjdhcdjgeeajaiccigcbhjhddjhjgjgigifdfajaficibebfdjjihbibbhcigcbgffdadajiigfdiiafjejeeddhjejddeedehbdceidjhgeecabaeefabadfadbbbahecccdhdebedaaeagdhgdjdcjaahgadbdbgaaccbgafeichdafjfcjedjcgafajbafgcafajhjagegdcacbehgjhccchfdificibccicbedfhafjhcfhjajgggbjgdjigeeehbdbfchiccbhdjeaadgjjbbbfebdhhhaijegcbjebfhefdcfefcbgjcgiefbbhbejeiaiadagaecahdbbfahgadagccichadfdddeefhgbeiejabhdeidggaiebijbffaadijcjhhfdjjghebaigehijcgdggfgbhiebhdbjdiedcacjgdbfcifgfgaahbcfhbdffjidgijgfaeebddgbidcaggfcfdbgfddgdfghhcbaeddbjdffjjajciaedbibjihihiiceagdddhgbbddgbdjaccjddhgbiejbhcahhiddjiiihhjbcdjficcdfacahiijhhifidifjjdjagjaejdjbaehdbicgggdggfajbjfifgacbhjdieebdaicbbaagebeebhcbjiejggdcaagbbeffcidifibfchgbcgaeacbagdeaabdfedhaefbfgefajdccijdibfaachgjahefhbhfgfdhaegcihjdbjcjbbhigifahieghccbigghhegcbgbcbhbgiibahjhhadffdcihecbcfbcijgeihfabdgihcaafhhhdfhhiaddbfjhdahjigegbhbafigcbigheaggcccffcgjiddeebifjccehheafjebbfhbdchdgddcgjgdecfhgfhicbadaaacbjdiabcjbecddaadbcjchjcgaicjidhihghcdihhjdaibfdhfbafagfdfcaaafbhgecifccehbcdeecibcgjeaeaibacgfhafifijfhhebidcafdjcdcbgjcdhaedgdjffeghjiidabcgggjffdeidafhiijaihiiegiffhfjhjaiefhegiebebbjcjfcddibdeggccefabaddigbfjgfjjeaifeiibcjhaegeiafjbhbijdadaejaecfdaiaghcbdhecehdahcbabgadffhcfjajgaedgdeebbabhajafhcbbhdbfabbgdijjfijdjahfaijjafhhjihbfaiibcihdcaebidjcgbabaihiiiabggbiabddheeeegcejdiebfjedegbiaafceifgbgjdijadgiibahhgibaihahdfaeaaefffgjibagjfcijdhbbicffcafcedadaaiiadccaehecbcceiegcgcigbdddhebjhaebcgbgcfjiaabdjccdjfabbgghbifchggfafdcdjbihieffbjijideeebaibheijdghdhffjgfjcfiiebaifjddgjdfejedjihegeaejifjgadajfeiaigdhijihcfchjdiiedffcjjcdhcbhjfebbhdahjjaibbgbfjfbfgehahijjcfhbafhgffibacfihcehijdhccdbfdeibgjhiacefhadfebefhjijbghaagghbbichcabijbehabeifcdjjedabhgfdijjdbiihfbfaiaeecejechdcdfchdhgcjiddffjbcgeeacbajejhajdjbajdefjfaajhhiehhaiejhebgdedageaijfefgcjcgeeahfehfdjcgbcagfdjcgbgijahfdghgghgdbfhgdgeejgcjcfbijddafcbfjbcdbdcibdebccdbaeiffcidebbgfajebdjjihjgfcahfiiciijidgjjhfacccbhidhffcbjdddfcejaggddiibiejfbbfdchcdbajjfifdddhjhabjabichaadbeijjjhhbacgdibejjbfgfbcaedgjacdcfdecfhefhiiihiafeafjfjechagghihchjhbcjbdiacacddhfbeieggidjefgibfggiedhghffdcbfdbaddgbeidejeigaagijbfiagheadgaaejfichajhfdcgfghbfjaeejgcgaccegbdabijigiehchjchecbiaeaffccbafeaddieccfjhebfcafehediadbceafjdbeejdfbibbdddifcbcdechbiheiihjbabgecbhejaehddhieicccajhbfcidaefdfbeddcbcjijjifeehbjbdjihgheecejdefedegjcaddbcfacjghgadfdcdjbahejdjbbhbacdbchdfchiijcjgeheffcajfgigaghaebifcjccejgdeefedifcigcbgbiihegdciffdaiijjehbjdihfbijbhbfbhjeeefbhgacacbgefibgfgjfeigbgfjfbiijbhgbcejgggjjbihghffffebefbcbfifejbhgaifacagjieehadfcbghfhbiaffdgebecdacejedfbdbafbgjhigejfjajgfgigbgfegbcjgiiheibbaegegejhafjhbfhhadijaccfejfdjcacfcccidcgigaihfbachhfeddacacjffjgfejjecaaiehjafbcbebdagejagadichefdafdgigdddejigjjhgdjgccghjfgieiaeebdihicjifahbjeihgedbjjbcciffejehaahjbadaafbgebebaiaeghbgacegideiejffdcfebahfeecebaebjigcchhcgfagbabahhihfdchfjhfjhgccdgeifchiihfhadahbbjefhhjfahcidadbfhdaaggdjcebahccjhghhaghgehacfhficdfiidbgghfgbchdcjhgidjcfbgibabfaccfbbihfehijgecgdfdcihgbiabcidfeaheggghhddbjibdeicdbfijcheidhjhgfddegigbddidajchaabhegiaciidjfcecdeibjgeiiegiggbejigdbeahbabchhgjgdeheebafhdijfdacbjggihccjbcbhjddjgifejfbcebcjidjhfbddcbfahbhheahjhaijciagjcjfiheeafeiihiichjhehbgiejjghiajbfcbhihceacjghgdhaefeihdacaeadbjbacidehjejcdhhjihdfdejebbffdejeagdbacgjhcjidbghcbjbfbabhecjbfiafggeeeighghdcgcbihgdcibjhdjihbaccddfiiahciggggacgffadfaacgeiiejfjbbdcgahaacggdjhddedgdgdfegiaibbbggaefbjhbhcdhjdiddiheihacicigedjjiaghiibbjdbbecbabecfbjicdfbjgeeedhcafijhbcdeaejgahfdgaibdadbjbeeadaaiefjbjbabiedaccfabehcaffijfeebabchfibfiifgdbdbhacbcgdgihgdbcjegidggjafdagfbgieecfcfiaaibbccibcecjajcecaeceagahfegjcdhddhfcagaccbdiijchiedeffjfdgbdadjhghhabifgccfdjbhbgabigfhgdiahgjbjghjabbfajhdjfeahedgdaigccegccjjbffjiafcbicabebhiabibadbceijfagiaiedfjiigbdhceejhehcfbeeejihfjddbaaigbbbjbcchbijabijfjbjbigheggjjcjbhhcebdhdhgdbebgigeejggebdfjefidaedhfafdifcdbciffecjhhcccajihfcadcbicgaihihcajdfccdabccfedfhaieegdaeaiifjbjfgaegabbdfeejfbhfffchicjjibcffhaedgcdhhdbafcigbfefdeaahdfeihibihegiaddhaggeaafcihedfcjccbeehebfcaiacaddbgheibejececehcfcjabhegbbgbhjdbeajbeefcadeijeeegjdghibeffefacieajfjbggcbdbchbfcihbebgbhebgcgehggfeeeghfihhibbafggfcdijihfeggbajbdaiafccajbfhhjejdiaiafjdcjejhbegihbcifejahbeehbhdhajbdagcedejcdaijbagggbhihhfiijjgajejgjibdfggffhhfbhdjijffjafcejebfdbgbhjafhdgebfjdhigdgcdfdbbhgbedhjibdceeahahdjfgbbbacaegicdhcjjggbcejicfbgigfhacaaichcadbjbieaaedbcjibfagficjdfhhgjjhhabifjfdiggfeejgbcedhecbdggehjaicigfhjajbdgdcbjcacaijggcffedabgddideccghejjfdgejhgecedicgdiccecdfjibghhfhjcffhijefjigehfgagffjhhahhcgcaebhfhaigfaefbchghhedajfijiehdihgjhfdfgehbicdjgebjbbahhdiijfdcgehebeehbdegifdfaafecggeeefajafaigeahedeejabihajijbgigihibicchegabjgbegjfjaibhbgibggfjehcccfejgeedhadcebhjfigdfhafhdddjdcfgbfeccajehcccggjffjjdaidajeefieffhfbiecfbicjbbjedghgbibhbfjjjeacejfabdfedhbhceadeciccddgdhajdhicgchfcddidijedjacbdgciafdaahbaeaefhjfbifdccafhghdhahaaicfjhcchecgiedchbcchicjggicjgjcabihdijfjibhdajiefijbfdjdfbjgiihdahghcehdcjjfciebifheehecffdheiheggfecjjhehigifbefagjbedifgdbggafhghfibaiggfchifggagdejbeccbgbaffgffdecieagabjaicadefaihhcbhhejigigfghibhcbdgjfcdgiaiigaegjidfidhdfbfjhceeghjeddaibefagibhfadjfhcbcfjijjiegjgaicgjahjjebhbgjibghahhgdgiiccbgbgeeaidhecghdggcfbjjgiaheecefbiedjbfcgaehjbhchehjaadjfhehahjdgjhgffjhhbbddiijeaiabidaiidjbjfaeijcihbefbhfhbghhegjefjhggabahfihhchihhidcifbjfdeieffbfjcbcgcjeebchehbdiabadhcbiagifbchecgjiddcgjdadhjcbehjjgaadjegghcighedgfdhgefdbgfgicifbhjjgabihajjcffdjhfjggcaggfhfdgaehjfaebejddhhddiiaagdebejfbehbjccbaggghjdiagcihgijfbfjbdhfeccdhjgbhihccggdedacihaicjbachjideegdhhhaiicgdejaafdahhiiehdeeeagdeedaiiigiahgihafdcagfafggafafcgajbfdijgaiicgjbcdjccejihifidajddchgdhcgghcggdeecahcijcagghabbcabiaedcdgegdhbdibccijedfbcidjcgfhghjgfahejbcaejcaajhdgibgjbgfifjiedabhghcehgifdhicgdcecjahjffigjeeiebjibadfcdchjajafdeeadjfeiiceegafgjaahhehfdcbejhfhbjcffdieiddabcddhaafigibedhajbifdjceadghghfbcbhfcfdccccgjcfjhgcdjcicjcdeidagdfigiajefeihafaacbfdefffacigfjbfeigfjfjgfccjhababfifegjbbjedfcgfhiddbibbajfebhcaeacbjbdibcgabgideiacadfdcfaigfhceecdbbieddhiiffjiebhjbjifeegafjibhjiicafbcagiagajejbbciecaajbfcddjjbjgifiidgjfghbdjcgejahebjjhhejbgfeiaccdbgjgfajegjbddchhcdeahbjcgafcjjbgbhigcddbhcidjafjdgcghjjiahgddddbcijehjiigahdhbhadaghabbfeajffccibgchbhjiaaacjbhfcbacbhdiiigegfgaghcjigcjbafjibaiccffjaabgijhbddhaehgfiebejeiaagfggjiafeccecibgaejheajcbejjcbiggbdcfahgcgbdfcejjdgfjfedgjbbbfjggcbjbagfajhjdbbcfihfgaffjddggeidhcajegbfbibhehcgfcbbgdabcecdaceijijaiedbjdeicjbijjbefegjbibefibjgigjeidceegchfdehbegebdicbadjieeciifeabbaijgdddhifdcebicjaceicfgedcgffhiajjdibeibhcjbgcggbibafhciebjbicdgbehiehhgjcbgiehegheiaehdfcbefafjjjjcfgicghjajjhbigecbfdaigeeaihidegaedihidaijebfgeihejebiihhidfdbicehaijgfcbdegacibfbeejhgfehagiijfedcbacgabefbaeddjjaddbdacbcbjbhgcghagghhbdagjieajccfgajhdhcciihciedffbdbdcajfihfeeicjfbbafdaihgeeaeihjabhbghgijjggdcaehahhfcajidgcgadbcdfhjdbejdgiifcjfaaejagchfacaadfhcdgaheeejcjighahehdbjhggihbcichahfiiieahffjgajhejgadjhhbdjcjfhibihaidaadfjabgidgihhahcchfgaigeggcbaiigidfibgeifibfcbaifhicdejdjjffjfgagfhgaaijchjidicfacfhfafbgdaefdcdhefbgjjfabhhhhejajhbchjbjceiggacicbdheeefghhhdgjgdiicafjijjffjdbicbcbifdgeigdgfbefgdeaegcgahabghhaabfibidjccfjgeahcgafhccaaidejcjdjcdbheaeecadbdjicjggabaedcbjcefajjbiiciacbgfdgjgagebjhgfghjeadcdgcaccbjgjbhijbgjebbifgeaiaiacjfbjhafdcggidihffgejcaadgeidjidjcgeeebagdfddhbbgbgghhbighgaggjichjadfgdedaahdiedbddhggcgiggfdjchicegcciebgajbadgijdahdgddhfdiibccjegcfaefbaidcaeaghjhjfbfcgjjhfaiiebhfgdihggdebbdibiiajibcefacbeedabieehgfbjhefabaajfebgfdeahfhecjdbeegbfgfibcfcedbajgihjjfcccgheffcehbejagcgedhgffjhijdafgcgehggjbebhbadfbfabfabibciffidcgdbhbfdfjajjfcfhbefccjjagbigjaidcjffdgbeiefehieefahbcbfcfcgeadeeibcgcabafbchbbddedgaijdeijcbehdhdaacdjdhdcecbeadcceibbhiehjbcbhiaacadjiidhicjjbehcfbcehdjjjcjgcjcgfhgcchefehcbcecfadghdfhehgggcjcdhidjhibbihhhjdhgjdegdbjgcdiehjchhbjgeegaejcfiibahfbgdhejabchdijihefajdcabbiafcjfgjhigdgaidhdfbjfhaacbiebbhjfhdahfadeicbacaedbaffdjfhdfhcjddaifjjghfjfiiddeababjhbbjbhaaebgjdcgcigidcjedefhdadegehbjcaacdifidhhchhdejggfcfagbicdgbbdefjaiegcjbabigihiaehbahgehedfegejdgggdhiachcfddegffeagagcfadigiajjhjfggejajhcbjbihfhcjchehideafdbhabggacgbcfhgdbaagddijhafjijfigaaaeedjfhgfhigfgdfdbahbbigdgcdhcbcjbfidjfddjjfjjiafdejdjbecdgeafefdfhfjajgjachcbgghejidgchgcbjcaajdafagabhfejdgjfiajjfagahigahahdedaehiegehcaabefjjdheegecfbiejjeghebgdahbjcjccddehdcdjfaifdbbjiabccjhadgafbaahfedjcjbigcfghbgafdbajicbbigdcgiaejdgbjgbgjeebjhgdcaihgbifdhdgicefgiehijbhejgggabfffaigeaaeieeicaeefbjaegajheefbgibeejfcdfidjfjccbachhegejffebdghehjddbffhdjijigebgehchjafjhdeageejghejbjaceffbfahahhfjdeiddcegjdjidjeecbjghhhbfedhcjfhecgigddaghafdjeeijgficfahhfidijgeehjbcdjgcegjdgagagiaaijciiahjgagfigaajbhcaabihjjhjahcjbejafgibicifgajbdbbfhieidhegdicdghiadhbeijjegdhiachecajgfffgidejfaibcadchbiiedabaefgcjjgffeidabfjihigjcggdhbccbhieidhjfgcjgbhjjccdbebaafbhdejabhhjfggegjjjhddchjjcfgjhaejjjcabgcfbecaccbcbbfddhfgffbgbeijcdcafafahbibdbbabfifgjjaidfcdecdijfhffebdbjfggfdghbccaggdadifddhghjbdegjbeaejfcaiajgbedigjhbafcbcgbebachhgeaacfcecfbjjffdgfgidddhcaefahcjiejbejedbaheidfijehbjbjdfbjddiegibbiffebedhecffbibghjfdiigfbgididbijfjcchddfgiihdaaegihaededcgigdfcghaegjccbgjfcjhgdidddhcajgjgficbgejchcfhfibgjjdjefchejhibdffjjjhcidaeajjjebjbdebeghfcdhjgbjcecfaadfdjcjciiaafjjccfjjjfgcachcadgfhbiedaagdbbhcabcaagaebjfbehdfhdhfgfegchdijggiihbcebhbbefhcgaeagjgbfhbhbhhggcgbijahhjiedaafbgfcgjabhbijeeagaejcjecedihfjgehcjfcfhacdjgejcdcdfbdbeeccgaijjciajideggggehfchhbjfheijiifggjfgaefjfbibfdjbcdhdcichjcfcdccddgdbfegicgicfcdcjijhdiifhgggbagfgegggdjbbjdabchfbehacgjiaafcecjdcbeadfddfgbafjcciffhajehaidgcheabdieaedggbhihbfbihjebedeecdgjcjhhjjijegibgadjcecbgebiijgcaffdifgehebgjbahebahbcdbiejhfdbfdhggfbfeccaicihadifigjcaccddjecbgiijadhchchacejdhbdgbgfedgcajdeidifehibhjhegjebfjejbhbjcgaefbhfgcahggcijgfchffadghdgbdfafdhcjdehibeegiabihgdbhegebdjdfcabeffebeefigejcedfifcjcgghecabfacgjeicababcfgjfifhbiijejiehjheiccigajgcffdgdjgagbghhjcjbejebbciccicgfcfhcfdiibgehafaecgeacfcafhaiibjhceddhhafhgfgaigfdhddacbcdiaaggcffchigbijiifajjidehjgjddcfjfjacfgfjdbhjbeijcgjbefcghefhiaggjbdafchbiccbgcjfffaabbjcecbdhccdeeedbjjdcbjibjchbjfjcdhaggdiaehbfibbfhhjededabgfgigfdhgfbiagcedefdabjcgidihgeaegjgjjhfddihcebabdcjbbcigfedjfgajdbbdihgicajhfiefajebcfgbfffhbdbgiiaedbfdjfigagjfcidaaacbdecdahieejiedgifeacjedjgaajgichfefchjgdcjfbiadaagifijeibhagidieihaaadagdegecdajdgjfiaeecgcjfjchcfbfcjdhjjchhbdfadecjbgffibejfjafihhdibiibccdjbabcbbdbidfcibihcdfhffifchhfffcebehefgjeaieiaidgdafagdhjiiciagjdgecijbehheibbiiafgafehcifgbhbdcbgejgdiejcgdajbjibheihbedgffeahjadbihgjjbdcaafgcjbbfdgdiiidgebcbbbgdghceifhcaggeighhjejgbgihfjbjaijbcedbcbeajcjcgijjiefcjccgdcdbecccagcgghbdeiegefjdajjajbfbdcabfjfahijjbecgdhcijhbjfdieffdbaiibadaeeaffedehdjgcffaeeichbiiahicfaeiejhgahcicifbbbfefgfceeaccjbhebbigjdeaiiebgijaadbiejfbcggaegfhijehijfgfebjgebbdagfbgceacggcjdcfhddfcbhaabidfbabbhabjcgeajaihfbjdbhaabhagedbcdbbcifcjdfcdcbehfacaajcicedjefechiacfgjcehgggcdgfafcgdagebgghdjahgiagfgiehgjihagfcbbbgijeihihhabhcaeaaigjfjeggadbibfaidcebgejdifdajbedifafdebbiedgejdehbgfagfhhafaacachahehjiicaeaajhchjgcegcfhfcdfhfagaedddffjeebefdcfjiiedbdjdcbacjcdhciggdcfcibcafjehiagegfcgcgdacijjjjijahacdaejdhbfiibbfhehfbeaacafacbfaidihdjifabffjbjebjdfiehbjhehjciefhaidiajdbifddjfiaiiidijbeahhfaajiahciiaajihcahhjhhjbebfcgcchfdbhcfdcegjfcbadfjajjbbdicdjejijccjdacgaiicfhggidabifcedgeieidhdjbbfbcfagdefjejfcaicaddbhgbbhhhiicjehhcecgfdcfgfbjcefcahcaebbghihcjefgdabeddadgeefhicajagbdebccbgcjdfdijbaadfffgebjiiaicbeihjiicbcbfbhhiagihjdgidbfjfgfbejdcadgbbgcbbhgdcgciddhbegdcajgijbbfhbcibfhgjfjacbghhdcfgdajbbcgdacjbaiahbaaigbhccjiiedecbfbjdfhgjagdbegaaeheaaihfcdgdaddicffeejehjedhibiejbgihcjhbhhadchccgafgibiheibeibeffhbbcffacgbbhbjicbijgihibidjabdgehjgcahdeagecjjdigjhbfhgeagjegfccgjgejegibcdijegeifidgijgcbjjhfcdcgebdjeffdddabjeghibfebafiggeiadbcjgfiggbbijdhhhdceibffhgeidcefiaadeeacbddedcdabeeabhajahdhcaggbhdjbgcdiicjaddggiegcabegdaafaafjdbhfeaddjihidgjhcdbhdijdabehcdeaegdiiigcdfdhgadgbhjjaiebfdbhigbiedhiididheeafiejaeefbdhiedajificchdjhefaihejcdgbfhgcjijfgdhdfddajjbjcaaddciejfhghhgbaahbaiadccigjjjhjfbigdeaffbhhdadjjfibddibfcjeijigfbeafcjdfjggjgbjageebgffffbbjeeeedagjadbebbjfjejgcdiebfgchdieidhifbbfeddjddhjjhgibccgibcdgdiahachdjcjfjiebgfdaagidfegdghhebejjhehdbafjgecdhjfajaiegbjdhhfhejgcggajbejbiccagcddcehgcidafhjhgiggcbgadeagbbejhcfaijecjcjdjbjfbebfhcgcaddgiidghehahbcgigejhcefegfehihgcbajfabeacijfdhdgfgbdjficidfddccbdjdgedhghfgbchcaaeefeifefdgbcdhfdhgifgfaadjicgjadjigjeaajdfeiajjcjfhbgeidecedcgedbedaajaafecceaahfgbhaeahgfjchgcdfjchefajibffifgicgbejbdieicfbadgijddhfihieachgdejdcfhddghdjdceihihijebbiedfiaijfjcejijdigbghifgffjajdchcdgecjjdaadbbafjiiiheidjdafceccegacgeiabjiieahhjgdhbjdegagahigdccbjejgjdhigjedfgajbddeajdggghabgbgjadeiijdficebihdgfhbfcgcegjdeacheicadddcgfgijbjgejiafcacaaggiigegihfgcjbjdebbcfidjiecfechdfdhfijdifdibgidahjeijbdgcagbbidiiajgbcbfgbdjahgicgfbiahhhgigiaibaajhgdbibicaieichiedbjdcijejecigacbcdajhiehefdihieaghaejcgjhiihbacbididcagdbeafdahhgjdicacgaieabijjbcgjbdbcachhahcheihcdhfbgdggbgedhcjjfgcaigadjcdghfhcjbjcedefjibdghbffefgddgfehebhgdahbfeeagebffdbdghbegijcegdgeaeacfbhgbihjddijibfdbdhghidbgdieefgjdhfjafficgbbceidffdafddjhecibehcfcagjfghdfhjdafgiehajgcadaibabagaedgjgifajiaafibeifjbfefbccebfadchedafcbbfaddigfjfjcjhjhfidhaagehcdggagbbejhgicabigddbjfjffjhggghddchffgidbbhhfbiafjbjbjihddcgjfabibijicbddjhbchefhjghcbeiebejdgiejeffiehbdbaecehhfjcadbhjhifgaijaadhhidebiehbcjcjjccgijfefjbajdiijfjbfdcbjbciefhdjicfcfejbcfchhdiafheifcdeicbhcgjgcdjajahebhbcfeifhaedcfeheifcagfijdjfjfiejfeeifhjejdfajjdgccegbcafegcfceidhcgbgjbffjgijibeebcdjbbjheiafifegbgjfchgbbggdfjbjejeijhhgbajajagghjighacfjcdhadgjhcafdicifajhbaedgfejfgiadjchegbbbgjeidbjffeagifcjagbijcgdfddeggjicdidabcggefajfbfjhgigeddcbjbcaibebjbgiddcaabhdaafddhgjbchbjgjeaidaedgegfcbdhjjjaejbhdcebcbdggdhjgcadcbdbhgeabccdciabceedabiegidbgeadgdcecdgebedeiaecdibijjefhfbgchhgeaghdiddgeabiggcegjcdheciabahjbgafhhjfjfjhicdbahcgjeibbbfeiichbjfbcieeabbffeabfajdbaghiiiifjbhdebffiefeifdfgifjdfggcadehagidjceabfjaeeeejggiefdgadbdjhhfgbhcjbejbhgehfhbbfgieafijdjjjaejbaiacgaafeccgcjihchdjddgchhdfhidihhffgicahifcebbebhhjijjcjfjhfbhhbdadchgjdajhafihdeebibihaadbiihajbijedecjbcjfdeffjabjgcihfaifhiifhdcidhfbbjgbfbjfcciaegagegjgajjeahbedhhhhdjcdbhgidfgejgjchcgcbaaeecceeicdichbhfjabhidefhdgaghjcaffagidjjfgfdjfceeahibdjbjehgceadbaccdgfgefidggeiachcgcfiefdjjfhjghdajddghfabeggafgifdhfadjjhfjjdggecgbgbifhhgjbiaibgfjceiaijehbjahjefcdiagadbaafjafcigifaihegjdccbjceihejgfjjdaafbbdhggfiihejhjhfheaagidijddgggjeacgeajhidcejjgaigfhjadahedffafechjihfchahiddgjifcceebfehdgfbhdcjgdjidaicegbajbccfiijjhchghbejhafdfbjcbfiiecechgcgebagiabadidhghabfbghaiacbfghhhejffgbdacbbbaahgbfiifeejefeiacbgiegfhgfhgeffdgfbaedfghchfjcjaecjdgbecbjacfieeddgehdcfgfgdciaicgbdhbifjibicfcbhiieehbjcgaigaeidgicaaedjcbdcfeeaccejgicagbaajfggddebbbijehajbdeecgaahjgagebchcjaajfcahafdfedcijfebcdagbgdchgbgdegahicdffgaadjfafigghebjabdehjedfbbgdiahjejcdhagcbbhfdcfhjhiicigicghfeajeaebhfbdicadaghcicicfjaahjgcfjibhfchajchaeidejhcjjiaeiefgiegddjaadfhaghabcjhbfjiebbcfgeedcegjjjcdfgbajbejcfggfiehfbegjigdcjggbcicgiiabjaieagihgieiiidehjbfecfcbeabfhcfejhaheagfiicggehgififiiddgghgehfejcbgcigaegijijjabdbjehhjechbajgifjbcjajegeabhgdhibgfjgbcfaahfhcdbdiajcicjiigbhadhechjfhebighababdiehjabfhfbfdbdbgbbieicfdhacbhcedgghfieffbchjbcabfifabaicfcebehdbiccccdeccbhgfejghacjfcggidjbcadicjedjffghijajhdbagjbfcbhbdhghiiifdfjiidhegfeaagjdbfeedcdhdchacdibjfhbbgbabgeghiifjjiiiceageidahjeadjaegidcjfbhedddbdcdbdagiiehjjjbeiaiihdbhdgjfdbdigcfedgcdhcbfacbfibciahagjjjjhhhfhcifaieihbijgffcbjjeahiefgjhgdafgbhhbcddhabebjaijfcafbefhiceeifijbifcchaabfhagijahcbiiijfdgcifjeicchhdbedebhfegcadigbcagdaedjebajicigdgijgcijibefeaddhfebbjijhhhaahbbedfebifajidhadbcajfjcgadidacbgehehheahhfjgcdiibfjffageihggfdddhajedgjdecaijfegfefidcdebbiifgcdghgfagihafijhgeiegbhahdjdafebhgccdacejebcddjbbdfejchjfjgggafhjeijaahggfjbahdfghaebeggiadfaiafjhgdiejiidhfbahcjdfbegfbcbhfgceehbjehafgafiheagfjbfbafihdcfedffjcachfdhjedggihighfebbjihidafdgchgagcffhjddaadbjgdeagfajjdejdefjgdffbceggjaiibjhfieccbdigdjbgacgcgahcahfeebdjfijaihfbbagbjjfdbjihdcdagfciacabgajejibcbjdgfehhababajbcaagdbjejgfdjdjaebjggfaagihfgjfahijdcdigciideggdedbjahhdhhfgeahhfiddfehjcgfaaeaidbadcjefbajhbeffcgdicgaaafeijhdcbhaabaebgjfghjdbhdbhifjfgfajfccbabffgefceeeehgabjjeeaibfjffjcdjhfahjjchbahbbcfgejhaeghbfiedhgeehbaihbccfdchgdfgejehjjgcibeddffieahhaefcfaffeiecdbcgggfadhafcdgfcfjchhdehbfacdiccdddabafjaigaedcbbcjhhfhchgjfdhfgdjaejbghfdicgihgeciagbhbhdjbjajjfiabbccgjdhfjaifbhedbcabhfdjajifeifedggjccegfaijjebdiefhiehdcdjbhfbggfgibibceebdaeddaeceiahhdfecfcjdcjcehfiebjbabbdcigfbaghgdfdgchhgeeiggjejbhadecgjiafecjchedbcdagfbacbdebjhcdaibgbbieghjddghdgihggfjjijbjbhcdciibiaafdgbafddhaaejdfbadigdejaihedebdjedjdhjjgbecbagbeebddcdagiedhdbhcfbddebahbgeehgaaiaccafdjabjccfffdgjbegjifhdagifaajajhbgdcbddjbffgegdaabibffdcdjaaeiibaehgdeghbhcffijhcfdbjfichacggcjacibbidcbfgieajhejhhhcecghiifgdiaigfbbafjbhhbjafaahihaihaehciddhfijeeebjhedbjdiigeigbjabcfbgdajjjfijjihdhifgafbafdjjgbjhabaccjeegjbijehgaeddgecaegdifgjabjffcdgicddiebiiddbgdhgfjhejgbdegcjffgcbaijjegaaagiiah'
# x.canConstruct(x,ransomNote,magazine)
x.canConstruct(x,'ab','abac')
#%%
a='a'
b=int(a)
#%%
from collections import Counter
a=Counter('xxxabcsdfweeeeeacca')
b=Counter('aabbcccc')
#%%
a&b
